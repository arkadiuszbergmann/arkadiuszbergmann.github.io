{"version":3,"sources":["HelperFunctions.js","Project.js","img/icon_cmf.png","img/icon_alien_rush.png","img/icon_ld48.png","img/ss_cmf.jpg","img/ss_covert.jpg","img/ss_alien_rush.jpg","img/ss_ld48.jpg","img/ss_element_hunt.png","img/ss_final_road.jpg","Projects.js","samples/CrazyMetalFighters.js","About.js","Contact.js","MainContent.js","DrawerList.js","DrawerListOfLinks.js","DrawerContent.js","ResponsiveDrawer.js","index.js"],"names":["scrollTo","id","offset","yOffset","element","document","getElementById","y","getBoundingClientRect","top","window","pageYOffset","behavior","getScrollbarWidth","scrollbarWidth","outer","createElement","style","visibility","overflow","msOverflowStyle","body","appendChild","inner","offsetWidth","parentNode","removeChild","SyntaxHighlighter","registerLanguage","csharp","defaultData","useStyles","makeStyles","theme","cardRoot","props","backgroundColor","background","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","iconBackground","dividerMargin","marginTop","marginBottom","button","margin","spacing","watermark","position","textTransform","right","opacity","userSelect","code","maxHeight","fontFamily","fontWeight","watermarkParent","Project","classes","React","useState","expanded","setExpanded","handleExpandClick","projectName","split","replace","engine","details","language","sourceControl","Card","className","CardHeader","Avatar","aria-label","src","iconSrc","title","subheader","codeSample","CardMedia","Typography","variant","align","vs2015","showLineNumbers","CardContent","color","component","description","CardActions","disableSpacing","itchUrl","Button","startIcon","icon","faItchIo","href","target","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","image","screenshotSrc","Fragment","paragraph","Divider","team","map","t","i","myResponsibilities","r","techniquesEngine","techniquesLanguage","Grid","container","item","xs","sampleClassUrl","justify","masonryGrid","display","width","masonryColumn","paddingLeft","backgroundClip","Projects","breakpointCols","default","columnClassName","red","icon_cmf","ss_cmf","colorA","colorB","blue","icon_alien_rush","ss_alien_rush","ss_covert","icon_ld48","ss_ld48","ss_element_hunt","green","ss_final_road","paper","padding","About","minHeight","windowInnerHeight","Paper","elevation","Contact","MainContent","innerHeight","setWindowInnerHeight","useEffect","addEventListener","DrawerList","List","content","ListItem","text","closeDrawer","ListItemIcon","ListItemText","primary","DrawerListOfLinks","url","DrawerContent","drawerWidth","root","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","toolbarBelowAppBar","mixins","toolbar","toolbarText","flexDirection","alignSelf","alignItems","paddingBottom","drawerPaper","flexGrow","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","undefined","CssBaseline","AppBar","Toolbar","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","darkTheme","createMuiTheme","palette","type","App","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.ec27c3b5.chunk.js","sourcesContent":["export const scrollTo = (id, offset = -100) => {\r\n  const yOffset = offset;\r\n  const element = document.getElementById(id);\r\n  const y = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n  window.scrollTo({ top: y, behavior: \"smooth\" });\r\n};\r\n\r\n// source:\r\n// https://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript\r\nexport function getScrollbarWidth() {\r\n\r\n  if (getScrollbarWidth.scrollbarWidth) {\r\n    return getScrollbarWidth.scrollbarWidth;\r\n  }\r\n\r\n  // Creating invisible container\r\n  const outer = document.createElement('div');\r\n  outer.style.visibility = 'hidden';\r\n  outer.style.overflow = 'scroll'; // forcing scrollbar to appear\r\n  outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\r\n  document.body.appendChild(outer);\r\n\r\n  // Creating inner element and placing it in the container\r\n  const inner = document.createElement('div');\r\n  outer.appendChild(inner);\r\n\r\n  // Calculating difference between container's full width and the child width\r\n  const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\r\n\r\n  // Removing temporary elements from the DOM\r\n  outer.parentNode.removeChild(outer);\r\n\r\n  getScrollbarWidth.scrollbarWidth = scrollbarWidth;\r\n\r\n  return scrollbarWidth;\r\n\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { scrollTo, getScrollbarWidth } from \"./HelperFunctions\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faItchIo } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport csharp from 'react-syntax-highlighter/dist/esm/languages/hljs/csharp';\r\nimport vs2015 from 'react-syntax-highlighter/dist/esm/styles/hljs/vs2015';\r\n\r\nSyntaxHighlighter.registerLanguage('csharp', csharp);\r\n\r\nconst defaultData = {\r\n  engine: \"Unity\",\r\n  language: \"C#\",\r\n  sourceControl: \"git\"\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardRoot: (props) => ({\r\n    backgroundColor: \"#013B66\",\r\n    background: \"linear-gradient(-45deg, #045f77, #013B66)\"\r\n  }),\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: (props) => ({\r\n    backgroundColor: props.iconBackground\r\n  }),\r\n  dividerMargin: {\r\n    marginTop: \"30px\",\r\n    marginBottom: \"18px\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  watermark: {\r\n    position: \"absolute\",\r\n    textTransform: \"uppercase\",\r\n    top: \"8px\",\r\n    right: (16 + getScrollbarWidth()) + \"px\",\r\n    opacity: .2,\r\n    userSelect: \"none\"\r\n  },\r\n  code: {\r\n    maxHeight: \"600px\",\r\n    fontFamily: \"Consolas, monospace\",\r\n    fontWeight: 600\r\n  },\r\n  watermarkParent: {\r\n    position: \"relative\"\r\n  }\r\n}));\r\n\r\nfunction Project(props) {\r\n  const classes = useStyles(props);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const id = props.projectName.split(\"(\")[0].replace(/([^A-Za-z0-9])/g, \"\");\r\n\r\n  const engine = (props.details && props.details.engine) || defaultData.engine;\r\n  const language =\r\n    (props.details && props.details.language) || defaultData.language;\r\n  const sourceControl =\r\n    (props.details && props.details.sourceControl) || defaultData.sourceControl;\r\n\r\n  return (\r\n    <Card className={classes.cardRoot} id={id}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"Game's icon\"\r\n            className={classes.avatar}\r\n            src={props.iconSrc}\r\n          >\r\n            {id.replace(/([^A-Z])/g, \"\")}\r\n          </Avatar>\r\n        }\r\n        title={props.projectName}\r\n        subheader={props.subheader}\r\n      />\r\n      {props.codeSample ?\r\n        <CardMedia className={classes.watermarkParent}>\r\n          <Typography variant=\"h3\" align=\"right\" className={classes.watermark}>\r\n            Sample code\r\n          </Typography>\r\n          <SyntaxHighlighter\r\n            className={classes.code}\r\n            language=\"csharp\"\r\n            style={vs2015}\r\n            showLineNumbers\r\n            // wrapLongLines\r\n          >\r\n          {props.codeSample}\r\n          </SyntaxHighlighter>\r\n        </CardMedia>\r\n      : \"\"}\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {props.itchUrl ? (\r\n          <Button\r\n            startIcon={<FontAwesomeIcon icon={faItchIo} />}\r\n            href={props.itchUrl}\r\n            target=\"_blank\"\r\n          >\r\n            itch.io\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.screenshotSrc}\r\n          title=\"Screenshot from the game\"\r\n        />\r\n        <CardContent>\r\n          {props.details ? (\r\n            <React.Fragment>\r\n              {/* Project */}\r\n              <Typography paragraph variant=\"h5\">\r\n                Project\r\n              </Typography>\r\n              <Typography paragraph>Engine: {engine}</Typography>\r\n              <Typography paragraph>Language: {language}</Typography>\r\n              <Typography paragraph>Source control: {sourceControl}</Typography>\r\n              <Divider className={classes.dividerMargin} />\r\n              {/* Team */}\r\n              <Typography paragraph variant=\"h5\">\r\n                Team\r\n              </Typography>\r\n              {props.details.team.map((t, i) => (\r\n                <Typography paragraph key={i}>\r\n                  {t}\r\n                </Typography>\r\n              ))}\r\n              {props.details.myResponsibilities ? (\r\n                <React.Fragment>\r\n                  <Divider className={classes.dividerMargin} />\r\n                  {/* What I did */}\r\n                  <Typography paragraph variant=\"h5\">\r\n                    What I did\r\n                  </Typography>\r\n                  <Typography paragraph>I was responsible for:</Typography>\r\n                  <ul>\r\n                    {props.details.myResponsibilities.map((r, i) => (\r\n                      <li key={i}>\r\n                        <Typography paragraph>{r}</Typography>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {props.details.techniquesEngine &&\r\n              props.details.techniquesLanguage ? (\r\n                <React.Fragment>\r\n                  <Divider className={classes.dividerMargin} />\r\n                  {/* Techniques used */}\r\n                  <Typography paragraph variant=\"h5\">\r\n                    Techniques I used\r\n                  </Typography>\r\n                  <Typography paragraph>{engine}:</Typography>\r\n                  <ul>\r\n                    {props.details.techniquesEngine.map((t, i) => (\r\n                      <li key={i}>\r\n                        <Typography paragraph>{t}</Typography>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <Typography paragraph>{language}:</Typography>\r\n                  <ul>\r\n                    {props.details.techniquesLanguage.map((t, i) => (\r\n                      <li key={i}>\r\n                        <Typography paragraph>{t}</Typography>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </React.Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <br />\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={9}>\r\n                  {props.details.sampleClassUrl ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"default\"\r\n                      className={classes.button}\r\n                      startIcon={<CodeIcon />}\r\n                      href={props.details.sampleClassUrl}\r\n                      target=\"_blank\"\r\n                    >\r\n                      Sample class\r\n                    </Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={3} container justify=\"flex-end\">\r\n                  <IconButton\r\n                    className={clsx(classes.expand, {\r\n                      [classes.expandOpen]: expanded\r\n                    })}\r\n                    onClick={() => {\r\n                      handleExpandClick();\r\n                      scrollTo(id);\r\n                    }}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","export default __webpack_public_path__ + \"static/media/icon_cmf.634da796.png\";","export default __webpack_public_path__ + \"static/media/icon_alien_rush.5877c3c3.png\";","export default __webpack_public_path__ + \"static/media/icon_ld48.dc828d5a.png\";","export default __webpack_public_path__ + \"static/media/ss_cmf.64569be4.jpg\";","export default __webpack_public_path__ + \"static/media/ss_covert.7b72ca2a.jpg\";","export default __webpack_public_path__ + \"static/media/ss_alien_rush.d5a6105e.jpg\";","export default __webpack_public_path__ + \"static/media/ss_ld48.48f9e5c9.jpg\";","export default __webpack_public_path__ + \"static/media/ss_element_hunt.a4282414.png\";","export default __webpack_public_path__ + \"static/media/ss_final_road.0d5a2af6.jpg\";","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Project from \"./Project\";\r\nimport { red, blue, green } from \"@material-ui/core/colors\";\r\nimport Masonry from \"react-masonry-css\";\r\n\r\n// game icons\r\nimport icon_cmf from \"./img/icon_cmf.png\";\r\nimport icon_alien_rush from \"./img/icon_alien_rush.png\";\r\nimport icon_ld48 from \"./img/icon_ld48.png\";\r\n\r\n// screenshots\r\nimport ss_cmf from \"./img/ss_cmf.jpg\";\r\nimport ss_covert from \"./img/ss_covert.jpg\";\r\nimport ss_alien_rush from \"./img/ss_alien_rush.jpg\";\r\nimport ss_ld48 from \"./img/ss_ld48.jpg\";\r\nimport ss_element_hunt from \"./img/ss_element_hunt.png\";\r\nimport ss_final_road from \"./img/ss_final_road.jpg\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n// code samples\r\nimport sample_cmf from \"./samples/CrazyMetalFighters\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  masonryGrid: {\r\n    display: \"flex\",\r\n    marginLeft: theme.spacing(-4),\r\n    width: \"inherit\"\r\n  },\r\n  masonryColumn: {\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundClip: \"padding-box\",\r\n    \"& > div\": {\r\n      marginBottom: \"30px\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction Projects(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h4\" id=\"Unity projects\" paragraph>\r\n        Unity projects\r\n      </Typography>\r\n      <Masonry\r\n        //breakpointCols={{ default: 2, 959: 1 }}\r\n        breakpointCols={{ default: 1 }}\r\n        className={classes.masonryGrid}\r\n        columnClassName={classes.masonryColumn}\r\n      >\r\n        <Project\r\n          projectName=\"Crazy Metal Fighters\"\r\n          subheader=\"03.2020 – 07.2020\"\r\n          iconBackground={red[500]}\r\n          iconSrc={icon_cmf}\r\n          screenshotSrc={ss_cmf}\r\n          codeSample={sample_cmf}\r\n          colorA=\"#734429\"\r\n          colorB=\"#320A59\"\r\n          description=\"Crazy Metal Fighters is a casual turn-based strategy game for Android and Windows.\"\r\n          itchUrl=\"https://crazymetalfighters.itch.io/crazy-metal-fighters\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Arkadiusz Bergmann, Michał Znajkiewicz, Ihor Yusko\",\r\n              \"Artist: Marek Laufer\",\r\n              \"Designer: Bartosz Galiński\"\r\n            ],\r\n            myResponsibilities: [\r\n              \"Programming the battle system: turns, attacks, status effects and more\",\r\n              \"Programming bot upgrades and enemy leveling\",\r\n              \"Programming a solution for saving player's progress\",\r\n              \"Customizing the toon shader\",\r\n              \"Importing 3D models, textures and animations, programming the animations\"\r\n            ],\r\n            techniquesEngine: [\"Scriptable objects\", \"URP & Shader Graph\"],\r\n            techniquesLanguage: [\r\n              \"Delegates\",\r\n              \"Generic classes\",\r\n              \"Interfaces\",\r\n              \"Inheritance\",\r\n              \"Namespaces\",\r\n              \"LINQ\",\r\n              \"Singleton pattern\"\r\n            ],\r\n            sampleClassUrl:\r\n              \"https://github.com/arek-b/PortfolioCodeSamples/blob/main/CrazyMetalFighters/PlayerController.cs\"\r\n          }}\r\n        />\r\n        <Project\r\n          projectName=\"Alien Rush (MageJam vol. 4 game)\"\r\n          subheader=\"03.2021 – 04.2021\"\r\n          iconBackground={blue[200]}\r\n          iconSrc={icon_alien_rush}\r\n          screenshotSrc={ss_alien_rush}\r\n          description=\"Alien Rush is a tower defense game for Windows set on a distant planet, where you will fight for survival of your race as enemies try to flood your base.\"\r\n          itchUrl=\"https://arekb.itch.io/alien-rush\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Arkadiusz Bergmann, Jan Maciejewski\",\r\n              \"Artists: Marek Laufer, Arkadiusz Ławniczak, Jan Maciejewski\"\r\n            ],\r\n            sampleClassUrl: \"\"\r\n          }}\r\n        />\r\n        <Project\r\n          projectName=\"Covert\"\r\n          subheader=\"10.2020 – 02.2021\"\r\n          iconBackground={red[300]}\r\n          iconSrc={null}\r\n          screenshotSrc={ss_covert}\r\n          description=\"Covert is a 3D action-adventure game for Windows set in a world of anthropomorphic animals in the middle of a war similar to World War II.\"\r\n          itchUrl=\"\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Arkadiusz Bergmann, Jan Maciejewski\",\r\n              \"Artists: Marek Laufer, Arkadiusz Ławniczak\",\r\n              \"Designer: Bartosz Galiński\"\r\n            ],\r\n            sampleClassUrl: \"\"\r\n          }}\r\n        />\r\n        <Project\r\n          projectName=\"Ludum Dare 48 game\"\r\n          subheader=\"24.04.2021 – 26.04.2021\"\r\n          iconBackground={blue[100]}\r\n          iconSrc={icon_ld48}\r\n          screenshotSrc={ss_ld48}\r\n          description={`This is a Windows adventure game whose full title is: \"Wander through the caves in search of a new nest\".`}\r\n          itchUrl=\"https://arekb.itch.io/wander-through-the-caves-in-search-of-a-new-nest\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Arkadiusz Bergmann, Jan Maciejewski\",\r\n              \"Artists: Marek Laufer, Jan Maciejewski, Arkadiusz Ławniczak\"\r\n            ],\r\n            sampleClassUrl: \"\"\r\n          }}\r\n        />\r\n        <Project\r\n          projectName=\"Element Hunt\"\r\n          subheader=\"10.2019 – 02.2020\"\r\n          iconBackground={blue[400]}\r\n          iconSrc={null}\r\n          screenshotSrc={ss_element_hunt}\r\n          description=\"Element Hunt is a Windows platformer game about a shaman, in which you embark on a journey to obtain the fourth element, but on the way encounter guardians who attempt to stop you.\"\r\n          itchUrl=\"https://thegreenwolffe.itch.io/element-hunt\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Aleksander Jaronik, Arkadiusz Bergmann, Ihor Yusko\",\r\n              \"Artist: Marek Laufer\",\r\n              \"Designer: Adam Heinrich\"\r\n            ],\r\n            sampleClassUrl: \"\"\r\n          }}\r\n        />\r\n      </Masonry>\r\n      <br />\r\n      <Typography variant=\"h4\" id=\"Unreal Engine projects\" paragraph>\r\n        Unreal Engine projects\r\n      </Typography>\r\n      <Masonry\r\n        breakpointCols={{ default: 1 }}\r\n        className={classes.masonryGrid}\r\n        columnClassName={classes.masonryColumn}\r\n      >\r\n        <Project\r\n          projectName=\"Final Road\"\r\n          subheader=\"03.2021 – 06.2021\"\r\n          iconBackground={green[200]}\r\n          iconSrc={null}\r\n          screenshotSrc={ss_final_road}\r\n          colorA=\"#734429\"\r\n          colorB=\"#320A59\"\r\n          description=\"Final Road is an action game about a lone adventurer venturing into an abandoned research facility.\"\r\n          itchUrl=\"https://darg8.itch.io/final-road\"\r\n          details={{\r\n            team: [\r\n              \"Programmers: Arkadiusz Bergmann, Jan Maciejewski\",\r\n              \"Artists: Marek Laufer, Arkadiusz Ławniczak\",\r\n              \"Designer: Bartosz Galiński\"\r\n            ],\r\n            sampleClassUrl: \"\",\r\n            engine: \"Unreal Engine 4\",\r\n            language: \"Blueprints\"\r\n          }}\r\n        />\r\n      </Masonry>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","const sample_cmf = `using System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing UnityEngine;\r\nusing UnityEngine.Assertions;\r\n\r\npublic class PlayerController : MonoBehaviour, ISavableDataContainer<PlayerDataSerializable>\r\n{\r\n    public static PlayerController Instance { get; private set; }\r\n    [SerializeField] private List<Robot> _robots;\r\n    public Robot ActiveRobot { get; private set; }\r\n    private GameDataSaver<PlayerController, PlayerDataSerializable> _saver;\r\n\r\n    private void Awake()\r\n    {\r\n        DontDestroyOnLoad(gameObject);\r\n        if (Instance == null)\r\n        {\r\n            Instance = this;\r\n        }\r\n        if (Instance != this)\r\n        {\r\n            Destroy(gameObject);\r\n            return;\r\n        }\r\n        Assert.IsNotNull(_robots);\r\n        Assert.IsFalse(_robots.Count == 0);\r\n        _saver = new GameDataSaver<PlayerController, PlayerDataSerializable>(Instance, SaveIds.PlayerData);\r\n        _saver.Load();\r\n        if (ActiveRobot == null)\r\n        {\r\n            // save file doesn't exist or is invalid\r\n            ActiveRobot = GetDefaultRobot();\r\n        }\r\n    }\r\n\r\n    private void OnEnable()\r\n    {\r\n        GarageController.RobotChanged += HandleRobotChange;\r\n    }\r\n\r\n    private void OnDisable()\r\n    {\r\n        GarageController.RobotChanged -= HandleRobotChange;\r\n    }\r\n\r\n    private void HandleRobotChange(Robot robot)\r\n    {\r\n        if (robot.Equals(ActiveRobot))\r\n            return;\r\n        if (robot.PlayerData.ownedByPlayer)\r\n        {\r\n            ActiveRobot = _robots.Where(r => r.Equals(robot)).First();\r\n            _saver.Save();\r\n        }\r\n    }\r\n\r\n    public PlayerDataSerializable GetSerializable()\r\n    {\r\n        return new PlayerDataSerializable\r\n        {\r\n            activeRobotName = ActiveRobot.defaultData.unitName\r\n        };\r\n    }\r\n\r\n    public void Deserialize(PlayerDataSerializable data)\r\n    {\r\n        for (int i = 0; i < _robots.Count; i++)\r\n        {\r\n            if (data.activeRobotName == _robots[i].defaultData.unitName)\r\n            {\r\n                ActiveRobot = _robots[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private Robot GetDefaultRobot()\r\n    {\r\n        return _robots.Where(r => r.defaultData.ownedByPlayer).First();\r\n    }\r\n}`;\r\nexport default sample_cmf;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: 16,\r\n    margin: \"70px 60px\"\r\n  }\r\n}));\r\n\r\nfunction About(props) {\r\n  const classes = useStyles();\r\n  const getHeight = () => props.windowInnerHeight - 105 + \"px\";\r\n\r\n  return (\r\n    <div style={{ minHeight: getHeight() }}>\r\n      <Typography variant=\"h4\" id=\"About\" paragraph>\r\n        About\r\n      </Typography>\r\n      <Paper className={classes.paper} elevation={8}>\r\n        <Typography paragraph>\r\n          Hi! I am a&nbsp;Unity developer. I've been passionate about computers and video\r\n          games ever since I was very young. As could be expected, this interest\r\n          has driven me to learn programming. I'm hoping that as I go forward, I'll\r\n          keep learning a&nbsp;lot while taking part in making awesome, engaging games!\r\n        </Typography>\r\n      </Paper>\r\n      <Typography variant=\"h5\" paragraph>\r\n        Skills\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Game engines\r\n          </Typography>\r\n          <Typography paragraph>⚪⚪⚪⚪⚫ Unity</Typography>\r\n          <Typography paragraph>⚪⚪⚫⚫⚫ Unreal Engine</Typography>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Programming languages\r\n          </Typography>\r\n          <Typography paragraph>⚪⚪⚪⚪⚫ C#</Typography>\r\n          <Typography paragraph>⚪⚪⚫⚫⚫ C++</Typography>\r\n          <Typography paragraph>⚪⚪⚪⚪⚫ JavaScript</Typography>\r\n          <Typography paragraph>⚪⚪⚪⚫⚫ PHP</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Languages\r\n          </Typography>\r\n          <Typography paragraph>⚪⚪⚪⚪⚪ Polish (native)</Typography>\r\n          <Typography paragraph>⚪⚪⚪⚪⚫ English</Typography>\r\n          <Typography variant=\"h6\" paragraph>\r\n            Soft skills\r\n          </Typography>\r\n          <Typography paragraph>🔵 Teamwork</Typography>\r\n          <Typography paragraph>🔵 Attention to detail</Typography>\r\n          <Typography paragraph>🔵 Openness to feedback</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\n\r\nfunction Contact(props) {\r\n  const getHeight = () => props.windowInnerHeight - 125 + \"px\";\r\n\r\n  return (\r\n    <div style={{ minHeight: getHeight() }}>\r\n      <Typography variant=\"h4\" id=\"Contact\" paragraph>\r\n        Contact\r\n      </Typography>\r\n\r\n      <Button\r\n        href=\"mailto:arkadiuszbergmann@gmail.com\"\r\n        startIcon={<EmailIcon />}\r\n        style={{ userSelect: \"text\" }}\r\n        variant=\"outlined\"\r\n      >\r\n        arkadiuszbergmann@gmail.com\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Projects from \"./Projects\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\n\r\nfunction MainContent(props) {\r\n  const [windowInnerHeight, setWindowInnerHeight] = useState(\r\n    window.innerHeight\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setWindowInnerHeight(window.innerHeight);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Projects />\r\n      <About windowInnerHeight={windowInnerHeight} />\r\n      <Contact windowInnerHeight={windowInnerHeight} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { scrollTo } from \"./HelperFunctions\";\r\n\r\nfunction DrawerList(props) {\r\n  return (\r\n    <List>\r\n      {props.content.map((item) => (\r\n        <ListItem\r\n          button\r\n          key={item.text}\r\n          onClick={() => {\r\n            scrollTo(item.text);\r\n            props.closeDrawer();\r\n          }}\r\n        >\r\n          <ListItemIcon>{item.icon}</ListItemIcon>\r\n          <ListItemText primary={item.text} />\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default DrawerList;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\n\r\nfunction DrawerListOfLinks(props) {\r\n  return (\r\n    <List>\r\n      {props.content.map((item) => (\r\n        <ListItem\r\n          button\r\n          component=\"a\"\r\n          target=\"_blank\"\r\n          href={item.url}\r\n          key={item.text}\r\n        >\r\n          <ListItemIcon>{item.icon}</ListItemIcon>\r\n          <ListItemText primary={item.text} />\r\n          <ListItemIcon>\r\n            <OpenInNewIcon />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default DrawerListOfLinks;\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport DrawerList from \"./DrawerList\";\r\nimport DrawerListOfLinks from \"./DrawerListOfLinks\";\r\n\r\nfunction DrawerContent(props) {\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      <DrawerList\r\n        content={[\r\n          {\r\n            text: \"Unity projects\",\r\n            icon: <CodeIcon />\r\n          },\r\n          {\r\n            text: \"Unreal Engine projects\",\r\n            icon: <CodeIcon />\r\n          },\r\n          {\r\n            text: \"About\",\r\n            icon: <InfoIcon />\r\n          },\r\n          {\r\n            text: \"Contact\",\r\n            icon: <AlternateEmailIcon />\r\n          }\r\n        ]}\r\n        closeDrawer={props.closeDrawer}\r\n      />\r\n      <Divider />\r\n      <DrawerListOfLinks\r\n        content={[\r\n          {\r\n            text: \"GitHub\",\r\n            icon: <GitHubIcon />,\r\n            url: \"https://github.com/arek-b\"\r\n          },\r\n          {\r\n            text: \"LinkedIn\",\r\n            icon: <LinkedInIcon />,\r\n            url: \"https://www.linkedin.com/in/arkadiusz-bergmann/\"\r\n          }\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerContent;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MainContent from \"./MainContent\";\r\nimport DrawerContent from \"./DrawerContent\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    },\r\n    opacity: 0.9,\r\n    backdropFilter: \"blur(6px)\",\r\n    backgroundColor: \"#013B66\"\r\n    //background:\r\n    //  \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(9,9,121,1) 100%)\" // top bar\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbarBelowAppBar: theme.mixins.toolbar,\r\n  toolbarText: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignSelf: \"flex-end\"\r\n  },\r\n  toolbar: {\r\n    minHeight: 87,\r\n    alignItems: \"flex-start\",\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n    //backgroundColor: \"#000000\" // side bar\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n    //backgroundColor: \"#000000\" // main page\r\n    // background: \"linear-gradient(-45deg, #056B7D, #056B7D, #013B66, #056B7D)\",\r\n    // backgroundSize: \"400% 400%\",\r\n    // animation: \"$gradient 15s ease infinite\"\r\n  }\r\n  // \"@keyframes gradient\": {\r\n  //   \"0%\": {\r\n  //     backgroundPosition: \"0% 50%\"\r\n  //   },\r\n  //   \"50%\": {\r\n  //     backgroundPosition: \"100% 50%\"\r\n  //   },\r\n  //   \"100%\": {\r\n  //     backgroundPosition: \"0% 50%\"\r\n  //   }\r\n  // }\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    if (!mobileOpen) return;\r\n    setMobileOpen(false);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbarBelowAppBar} />\r\n      <DrawerContent closeDrawer={closeDrawer} />\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <div className={classes.toolbarText}>\r\n            <Typography variant=\"h5\" noWrap>\r\n              Arkadiusz Bergmann\r\n            </Typography>\r\n            <Typography noWrap>Junior Unity (C#) Developer</Typography>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main id=\"main\" className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <MainContent />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ResponsiveDrawer from \"./ResponsiveDrawer\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <ResponsiveDrawer />\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}